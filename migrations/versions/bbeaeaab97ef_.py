"""empty message

Revision ID: bbeaeaab97ef
Revises: 
Create Date: 2022-01-05 00:55:20.866784

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bbeaeaab97ef'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('postalAddress', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sitemap_index',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loc', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('term',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sitemap',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sitemap_index_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['sitemap_index_id'], ['sitemap_index.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_page',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('sitemap_id', sa.Integer(), nullable=True),
    sa.Column('disallow', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['sitemap_id'], ['sitemap.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.Unicode(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('phone', sa.Unicode(), nullable=True),
    sa.Column('website', sa.Unicode(), nullable=True),
    sa.Column('email', sa.Unicode(), nullable=True),
    sa.Column('about', sa.Unicode(), nullable=True),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('fields', sa.JSON(), nullable=True),
    sa.Column('address', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('card', sa.JSON(), nullable=True),
    sa.Column('image', sa.Unicode(), nullable=True),
    sa.Column('last_paid', sa.DateTime(), nullable=True),
    sa.Column('paid', sa.Boolean(), nullable=True),
    sa.Column('show_email', sa.Boolean(), nullable=True),
    sa.Column('author', sa.JSON(), nullable=True),
    sa.Column('sitemap_id', sa.Integer(), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('socket_id', sa.Unicode(), nullable=True),
    sa.Column('no_password', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['market_id'], ['market.id'], ),
    sa.ForeignKeyConstraint(['sitemap_id'], ['sitemap.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_token'), 'user', ['token'], unique=False)
    op.create_table('item',
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('image', sa.Unicode(), nullable=True),
    sa.Column('fields', sa.JSON(), nullable=True),
    sa.Column('distance', sa.JSON(), nullable=True),
    sa.Column('images', sa.JSON(), nullable=True),
    sa.Column('link', sa.Unicode(), nullable=True),
    sa.Column('redirect', sa.Boolean(), nullable=True),
    sa.Column('itype', sa.Unicode(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('itext', sa.Unicode(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('sitemap_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sitemap_id'], ['sitemap.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('term_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('body', sa.Unicode(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term', sa.Unicode(), nullable=True),
    sa.Column('grade', sa.Unicode(), nullable=True),
    sa.Column('score', sa.Unicode(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('room',
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('open', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('unseen', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sub', sa.JSON(), nullable=True),
    sa.Column('endpoint', sa.Unicode(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Unicode(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mod',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('site_page_id', sa.Integer(), nullable=True),
    sa.Column('note_id', sa.Integer(), nullable=True),
    sa.Column('sitemap_id', sa.Integer(), nullable=True),
    sa.Column('sitemap_index_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.ForeignKeyConstraint(['site_page_id'], ['site_page.id'], ),
    sa.ForeignKeyConstraint(['sitemap_id'], ['sitemap.id'], ),
    sa.ForeignKeyConstraint(['sitemap_index_id'], ['sitemap_index.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('xrooms',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('seen', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('xrooms')
    op.drop_table('mod')
    op.drop_table('message')
    op.drop_table('sub')
    op.drop_table('room')
    op.drop_table('result')
    op.drop_table('note')
    op.drop_table('item')
    op.drop_index(op.f('ix_user_token'), table_name='user')
    op.drop_table('user')
    op.drop_table('site_page')
    op.drop_table('sitemap')
    op.drop_table('term')
    op.drop_table('subject')
    op.drop_table('sitemap_index')
    op.drop_table('market')
    op.drop_table('level')
    # ### end Alembic commands ###
